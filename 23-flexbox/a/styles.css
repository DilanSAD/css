/* Con flex solo se trabaja en un eje ya sea filas o columnas (unidireccional)
    permite distribuir los elementos en dirección vertical o horizontal
    su contenido se va adaptar dinamicamente a el tamaño de la caja que lo contiene */

#layout {
    border: 3px solid black;
    padding: 5px;

    /* DISPLAY BLOCK,INLINE O FLEX */
    /* Se le pone display al contenedor de los elementos */
    display: flex;

    /* DIRECCIÓN */
    flex-direction: row;

    /* ENVOLTORIO */
    flex-wrap: nowrap;
    gap: 10px;

    /* ALINEACIÓN */
    /* Horizontal */
    justify-content: flex-start;
    /* Vertical */
    align-items: center;
}

.caja {
    background-color: #09f;
    text-align: center;
    font-size: 20px;
    border: 4px solid #222;
    margin: 10px;

    /* ORDEN */
    order: 10;
    /* GROW */
    flex-grow: 1;

    /* alineación eje cruzado */
    align-self: center;
}

.yellow {
    background-color: yellow;
    order: 1;
}

.blue {
    background-color: blue;
    order: 2;
}

.red {
    background-color: red;
    order: 3;
    flex-grow: 30;
}



.parent {
    border: 5px solid black;
    /* El contenido ocupa todo el espacio horizontal, 
    afecta el ancho del contenido,
    la altura sera la que necesita el contenido */
    /* Mostrar el contenido como si fuese una caja
    en lugar que el contenido sea en línea tenemos un bloque
    el siguinete elemento aparece después del salto de línea */
    display: block;
    /* El contenido se comporta como texto, uno después del otro, 
    el contenedor no ocupa todo el espacio disponible.
    tanto el ancho como el alto se adapta a el contenido */
    display: inline-flex;
    /* los hijos se alineen vertical o horizontal
    incluso con tamaños desconocidos o dinamicos.
    El contenedor ocupa todo el espacio
    puede seguir creciendo más que el contenido */
    /* Establece como debe funcionar el contenedor respecto a sus hijos
    vamos a tener un contenedor que es flexible y que permite a todos los hijos
    ser alineados de otra manera, tanto vertical como horizontalmente
    incluso con tamaños desconocidos o dinámicos */
    display: flex;

    /* Por defecto */
    flex-direction: row;
    flex-direction: row-reverse;
    /* Apila por columna o fila a todos los hijos,
    este seria el eje principal del cotenedor */
    flex-direction: column;
    flex-direction: column-reverse;

    /* Dirección de escritura */
    direction: rtl;
    direction: ltr;

    /* El modo de escritura */
    writing-mode: vertical-lr;

    /* Por defecto si no hay suficiente espacio en el contenedor,
    los elementos saltan de línea */
    flex-wrap: wrap;
    /* Ajusta cada elemento para que ocupe el espacio y no salte a la siguiente línea */
    flex-wrap: nowrap;

    /* Une como primer valor la dirección y luego el wrap */
    flex-flow: row wrap;

    /* Espacio entre elementos (no los laterales del contenedor) */
    gap: 15px;

    /* Basado en el eje principal se distribuye en contenido */
    /* Por defecto */
    justify-content: flex-start;
    /* Elementos al final */
    justify-content: flex-end;
    /* Elementos centrados */
    justify-content: center;
    /* Deja el mismo espacio entre cada elemento del cotenedor a la izquierda y derecha */
    justify-content: space-around;
    /* En los laterales no deja espacio, separa todo entre los elementos de forma uniforme */
    justify-content: space-between;
    /* Mismo espacio entre cada elemento y los laterales */
    justify-content: space-evenly;

    /*alinea los elementos en el eje cruzado*/
    align-items: baseline;
    align-items: center;
    align-items: flex-end;
    align-items: flex-start;

    /*Basado en el eje cruzado dentro de la fila en la que corresponde*/
    align-content: center;
}

.item {
    border: 1px solid;
    opacity: .9;
    width: 100px;
    height: 100px;
    background-color: #09f;

    /* Valores por defecto */
    flex-grow: 0;
    /* Los elementos no crecen, con 1 si crecen */
    flex-shrink: 1;
    /* Los elementos pueden reducir su tamaño a uno más pequeño que su flex-basis */
    flex-basis: auto;
    /*Los elementos tienen un tamaño base en auto, con 0 es el mismo espacio para todos */

    /* Los anteriores valores en su conjunto por defecto serian */
    flex: initial;

    /* El contenido se adapta a el contenedor a la escala indicada */
    flex-grow: 1;

    /* Según la regla de los 3 valores por defecto de arriba entonces: */
    /*1 1 auto*/
    flex: auto;
    /* Todos los valores por defecto con 1, 1, 0 cuando flex esta en el contenedor */
    flex: 1;
    /* Voy asignando cuanto ocupan los elementos del cotenedor */
    flex: 4;

    /* Para modificar elementos en especifico en el eje cruzado */
    align-self: flex-start;
    align-self: flex-end;
    align-self: center;
}